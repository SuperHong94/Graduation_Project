FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 14 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  StructuredBuffer g_arrFrameTrans;
  StructuredBuffer g_arrOffset;
  RWStructuredBuffer g_arrFinalMat;
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 18 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  RWTexture2D g_rwtex_0;
  StructuredBuffer g_arrSrc_0;
  StructuredBuffer g_arrSrc_1;
  StructuredBuffer g_arrSrc_2;
  StructuredBuffer g_arrSrc_3;
  StructuredBuffer g_arrSrc_4;
  RWStructuredBuffer g_arrFinalMat;
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 11 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 11 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 14 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  StructuredBuffer tData;
  RWStructuredBuffer tRWData;
  RWStructuredBuffer tRWSharedData;
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  compilation object save succeeded; see C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\03. External\Library\Engine\posteffect.cso
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 11 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 11 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 11 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 11 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
FXC : warning X4717: Effects deprecated for D3DCompiler_47
  
  //
  // FX Version: fx_5_0
  //
  // 6 local buffer(s)
  //
  cbuffer TRANSFORM_MATRIX : register(b0)
  {
      float4x4 g_matWorld;                // Offset:    0, size:   64
      float4x4 g_matView;                 // Offset:   64, size:   64
      float4x4 g_matProj;                 // Offset:  128, size:   64
      float4x4 g_matWV;                   // Offset:  192, size:   64
      float4x4 g_matWVP;                  // Offset:  256, size:   64
      float4x4 g_matWorldInv;             // Offset:  320, size:   64
      float4x4 g_matViewInv;              // Offset:  384, size:   64
      float4x4 g_matProjInv;              // Offset:  448, size:   64
  }
  
  cbuffer MATERIAL_PARAM : register(b1)
  {
      float4  g_vDiff;                    // Offset:    0, size:   16
      float4  g_vSpec;                    // Offset:   16, size:   16
      float4  g_vEmv;                     // Offset:   32, size:   16
      int     g_int_0;                    // Offset:   48, size:    4
      int     g_int_1;                    // Offset:   52, size:    4
      int     g_int_2;                    // Offset:   56, size:    4
      int     g_int_3;                    // Offset:   60, size:    4
      float   g_float_0;                  // Offset:   64, size:    4
      float   g_float_1;                  // Offset:   68, size:    4
      float   g_float_2;                  // Offset:   72, size:    4
      float   g_float_3;                  // Offset:   76, size:    4
      float2  g_vec2_0;                   // Offset:   80, size:    8
      float2  g_vec2_1;                   // Offset:   88, size:    8
      float2  g_vec2_2;                   // Offset:   96, size:    8
      float2  g_vec2_3;                   // Offset:  104, size:    8
      float4  g_vec4_0;                   // Offset:  112, size:   16
      float4  g_vec4_1;                   // Offset:  128, size:   16
      float4  g_vec4_2;                   // Offset:  144, size:   16
      float4  g_vec4_3;                   // Offset:  160, size:   16
      float4x4 g_mat_0;                   // Offset:  176, size:   64
      float4x4 g_mat_1;                   // Offset:  240, size:   64
      float4x4 g_mat_2;                   // Offset:  304, size:   64
      float4x4 g_mat_3;                   // Offset:  368, size:   64
      int     tex_0;                      // Offset:  432, size:    4
      int     tex_1;                      // Offset:  436, size:    4
      int     tex_2;                      // Offset:  440, size:    4
      int     tex_3;                      // Offset:  444, size:    4
  }
  
  cbuffer ANIM2D : register(b2)
  {
      float2  g_vLT;                      // Offset:    0, size:    8
      float2  g_vLen;                     // Offset:    8, size:    8
      float2  g_vOffset;                  // Offset:   16, size:    8
      int     IsAnim2D;                   // Offset:   24, size:    4
      int     padding2;                   // Offset:   28, size:    4
  }
  
  cbuffer LIGHT2D : register(b3)
  {
      tLight2DInfo g_Light2D[100];        // Offset:    0, size: 6400
      int     g_iLight2DCount;            // Offset: 6400, size:    4
      int3    padding3;                   // Offset: 6404, size:   12
  }
  
  cbuffer LIGHT3D : register(b4)
  {
      tLight3DInfo g_Light3D[100];        // Offset:    0, size: 9600
      int     g_iLight3DCount;            // Offset: 9600, size:    4
      int3    padding3DLight;             // Offset: 9604, size:   12
  }
  
  cbuffer GLOBAL : register(b5)
  {
      float2  g_vResolution;              // Offset:    0, size:    8
      float   g_fDT;                      // Offset:    8, size:    4
      float   g_fAccTime;                 // Offset:   12, size:    4
  }
  
  //
  // 11 local object(s)
  //
  Texture2D g_tex_0;
  Texture2D g_tex_1;
  Texture2D g_tex_2;
  Texture2D g_tex_3;
  Texture2D g_tex_4;
  Texture2D g_tex_5;
  Texture2D g_tex_6;
  StructuredBuffer g_arrFinalBoneMat;
  Texture2D g_tex_anim2D;
  SamplerState g_sam_0
  {
  };
  SamplerState g_sam_1
  {
  };
  
  stdafx.cpp
  Animation2D.cpp
  Animator2D.cpp
  Animator3D.cpp
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\Animator3D.cpp(12,17): warning C4244: '초기화 중': 'double'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  BehaviourTree.cpp
  BulletScript.cpp
  Camera.cpp
  Collider2D.cpp
  CollisionMgr.cpp
  Component.cpp
  ConstantBuffer.cpp
  Core.cpp
  desc.cpp
  Device.cpp
  Entity.cpp
  EventMgr.cpp
  FBXLoader.cpp
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(2468,23): warning C4244: '인수': 'const wchar_t'에서 'const _Elem'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(2479): message : 컴파일되는 함수 템플릿 인스턴스화 'void std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Construct<const wchar_t*>(_Iter,const _Iter,std::input_iterator_tag)'에 대한 참조를 확인하세요.
          with
          [
              _Iter=const wchar_t *
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(2479): message : 컴파일되는 함수 템플릿 인스턴스화 'void std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Construct<const wchar_t*>(_Iter,const _Iter,std::input_iterator_tag)'에 대한 참조를 확인하세요.
          with
          [
              _Iter=const wchar_t *
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(2459): message : 컴파일되는 함수 템플릿 인스턴스화 'void std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Construct<const wchar_t*>(const _Iter,const _Iter,std::forward_iterator_tag)'에 대한 참조를 확인하세요.
          with
          [
              _Iter=const wchar_t *
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(2459): message : 컴파일되는 함수 템플릿 인스턴스화 'void std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Construct<const wchar_t*>(const _Iter,const _Iter,std::forward_iterator_tag)'에 대한 참조를 확인하세요.
          with
          [
              _Iter=const wchar_t *
          ]
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\FBXLoader.cpp(59): message : 컴파일되는 함수 템플릿 인스턴스화 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string<std::_String_const_iterator<std::_String_val<std::_Simple_types<_Elem>>>,0>(_Iter,_Iter,const _Alloc &)'에 대한 참조를 확인하세요.
          with
          [
              _Elem=wchar_t,
              _Iter=std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,
              _Alloc=std::allocator<char>
          ]
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\FBXLoader.cpp(59): message : 컴파일되는 함수 템플릿 인스턴스화 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string<std::_String_const_iterator<std::_String_val<std::_Simple_types<_Elem>>>,0>(_Iter,_Iter,const _Alloc &)'에 대한 참조를 확인하세요.
          with
          [
              _Elem=wchar_t,
              _Iter=std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,
              _Alloc=std::allocator<char>
          ]
  Frustum.cpp
  func.cpp
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(203,11): warning C4244: '초기화 중': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(209,11): warning C4244: '초기화 중': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(213,12): warning C4244: '초기화 중': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(216,52): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(216,31): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(217,52): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(217,31): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(219,52): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(219,31): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(220,52): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\func.cpp(220,31): warning C4244: '인수': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  GameObject.cpp
  GridScript.cpp
  코드를 생성하고 있습니다...
  컴파일하고 있습니다...
  InstancingBuffer.cpp
  InstancingMgr.cpp
  KeyMgr.cpp
  Layer.cpp
  Light2D.cpp
  Light3D.cpp
  Material.cpp
  Mesh.cpp
  MeshData.cpp
  MeshRender.cpp
  MonsterScript.cpp
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\MonsterScript.cpp(39,27): warning C4244: '초기화 중': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\MonsterScript.cpp(65,13): warning C4244: '초기화 중': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  MRT.cpp
  ParticleSystem.cpp
  PathMgr.cpp
  PlayerScript.cpp
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\PlayerScript.cpp(226,13): warning C4244: '초기화 중': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
  RenderMgr.cpp
  RenderMgrInit.cpp
  ResMgr.cpp
  ResMgrInit.cpp
  Resource.cpp
  코드를 생성하고 있습니다...
  컴파일하고 있습니다...
  Scene.cpp
  SceneMgr.cpp
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\ToolCamScript.h(10,23): warning C4305: '초기화 중': 'double'에서 'float'(으)로 잘립니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\ToolCamScript.h(11,23): warning C4305: '초기화 중': 'double'에서 'float'(으)로 잘립니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\ToolCamScript.h(12,22): warning C4305: '초기화 중': 'double'에서 'float'(으)로 잘립니다.
  Script.cpp
  Shader.cpp
  SimpleMath.cpp
  Sound.cpp
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(2468,23): warning C4244: '인수': 'const wchar_t'에서 'const _Elem'(으)로 변환하면서 데이터가 손실될 수 있습니다.
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(2479): message : 컴파일되는 함수 템플릿 인스턴스화 'void std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Construct<const wchar_t*>(_Iter,const _Iter,std::input_iterator_tag)'에 대한 참조를 확인하세요.
          with
          [
              _Iter=const wchar_t *
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(2479): message : 컴파일되는 함수 템플릿 인스턴스화 'void std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Construct<const wchar_t*>(_Iter,const _Iter,std::input_iterator_tag)'에 대한 참조를 확인하세요.
          with
          [
              _Iter=const wchar_t *
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(2459): message : 컴파일되는 함수 템플릿 인스턴스화 'void std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Construct<const wchar_t*>(const _Iter,const _Iter,std::forward_iterator_tag)'에 대한 참조를 확인하세요.
          with
          [
              _Iter=const wchar_t *
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29910\include\xstring(2459): message : 컴파일되는 함수 템플릿 인스턴스화 'void std::basic_string<char,std::char_traits<char>,std::allocator<char>>::_Construct<const wchar_t*>(const _Iter,const _Iter,std::forward_iterator_tag)'에 대한 참조를 확인하세요.
          with
          [
              _Iter=const wchar_t *
          ]
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\Sound.cpp(100): message : 컴파일되는 함수 템플릿 인스턴스화 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string<std::_String_const_iterator<std::_String_val<std::_Simple_types<_Elem>>>,0>(_Iter,_Iter,const _Alloc &)'에 대한 참조를 확인하세요.
          with
          [
              _Elem=wchar_t,
              _Iter=std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,
              _Alloc=std::allocator<char>
          ]
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\Sound.cpp(100): message : 컴파일되는 함수 템플릿 인스턴스화 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string<std::_String_const_iterator<std::_String_val<std::_Simple_types<_Elem>>>,0>(_Iter,_Iter,const _Alloc &)'에 대한 참조를 확인하세요.
          with
          [
              _Elem=wchar_t,
              _Iter=std::_String_const_iterator<std::_String_val<std::_Simple_types<wchar_t>>>,
              _Alloc=std::allocator<char>
          ]
  StructuredBuffer.cpp
  TestScript.cpp
  Texture.cpp
  TimeMgr.cpp
  ToolCamScript.cpp
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\ToolCamScript.h(10,23): warning C4305: '초기화 중': 'double'에서 'float'(으)로 잘립니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\ToolCamScript.h(11,23): warning C4305: '초기화 중': 'double'에서 'float'(으)로 잘립니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\ToolCamScript.h(12,22): warning C4305: '초기화 중': 'double'에서 'float'(으)로 잘립니다.
C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\01. Project\Engine\ToolCamScript.cpp(96,21): warning C4305: '=': 'double'에서 'float'(으)로 잘립니다.
  Transform.cpp
  코드를 생성하고 있습니다...
  Engine.vcxproj -> C:\Users\yajun\Desktop\graduation_project\Graduation_Project\Graduation_Project\zombie\03. External\Library\Engine\Engine_debug.lib
  0개 파일이 복사되었습니다.
  0개 파일이 복사되었습니다.
